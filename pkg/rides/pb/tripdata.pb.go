// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/tripdata.proto

package pb // import "github.com/govinda-attal/cabride-api/pkg/rides/pb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TripData struct {
	Medallion            string               `protobuf:"bytes,1,opt,name=medallion,proto3" json:"medallion,omitempty"`
	HackLicense          string               `protobuf:"bytes,2,opt,name=hackLicense,proto3" json:"hackLicense,omitempty"`
	VendorID             string               `protobuf:"bytes,3,opt,name=vendorID,proto3" json:"vendorID,omitempty"`
	RateCode             int32                `protobuf:"varint,4,opt,name=rateCode,proto3" json:"rateCode,omitempty"`
	StoreFwdFlag         string               `protobuf:"bytes,5,opt,name=storeFwdFlag,proto3" json:"storeFwdFlag,omitempty"`
	Pickup               *timestamp.Timestamp `protobuf:"bytes,6,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Dropoff              *timestamp.Timestamp `protobuf:"bytes,7,opt,name=dropoff,proto3" json:"dropoff,omitempty"`
	PassengerCount       int32                `protobuf:"varint,8,opt,name=passengerCount,proto3" json:"passengerCount,omitempty"`
	TripTime             int64                `protobuf:"varint,9,opt,name=tripTime,proto3" json:"tripTime,omitempty"`
	TripDistance         float64              `protobuf:"fixed64,10,opt,name=tripDistance,proto3" json:"tripDistance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TripData) Reset()         { *m = TripData{} }
func (m *TripData) String() string { return proto.CompactTextString(m) }
func (*TripData) ProtoMessage()    {}
func (*TripData) Descriptor() ([]byte, []int) {
	return fileDescriptor_tripdata_b32fbcf1ebbda377, []int{0}
}
func (m *TripData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TripData.Unmarshal(m, b)
}
func (m *TripData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TripData.Marshal(b, m, deterministic)
}
func (dst *TripData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TripData.Merge(dst, src)
}
func (m *TripData) XXX_Size() int {
	return xxx_messageInfo_TripData.Size(m)
}
func (m *TripData) XXX_DiscardUnknown() {
	xxx_messageInfo_TripData.DiscardUnknown(m)
}

var xxx_messageInfo_TripData proto.InternalMessageInfo

func (m *TripData) GetMedallion() string {
	if m != nil {
		return m.Medallion
	}
	return ""
}

func (m *TripData) GetHackLicense() string {
	if m != nil {
		return m.HackLicense
	}
	return ""
}

func (m *TripData) GetVendorID() string {
	if m != nil {
		return m.VendorID
	}
	return ""
}

func (m *TripData) GetRateCode() int32 {
	if m != nil {
		return m.RateCode
	}
	return 0
}

func (m *TripData) GetStoreFwdFlag() string {
	if m != nil {
		return m.StoreFwdFlag
	}
	return ""
}

func (m *TripData) GetPickup() *timestamp.Timestamp {
	if m != nil {
		return m.Pickup
	}
	return nil
}

func (m *TripData) GetDropoff() *timestamp.Timestamp {
	if m != nil {
		return m.Dropoff
	}
	return nil
}

func (m *TripData) GetPassengerCount() int32 {
	if m != nil {
		return m.PassengerCount
	}
	return 0
}

func (m *TripData) GetTripTime() int64 {
	if m != nil {
		return m.TripTime
	}
	return 0
}

func (m *TripData) GetTripDistance() float64 {
	if m != nil {
		return m.TripDistance
	}
	return 0
}

func init() {
	proto.RegisterType((*TripData)(nil), "proto.TripData")
}

func init() { proto.RegisterFile("proto/tripdata.proto", fileDescriptor_tripdata_b32fbcf1ebbda377) }

var fileDescriptor_tripdata_b32fbcf1ebbda377 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x4f, 0x6f, 0x2a, 0x21,
	0x14, 0xc5, 0x83, 0x3e, 0xff, 0xe1, 0xcb, 0x5b, 0x90, 0xb7, 0x20, 0xe6, 0x25, 0x6f, 0xe2, 0xa2,
	0x99, 0x8d, 0x43, 0xaa, 0xfd, 0x04, 0xd5, 0x98, 0x34, 0xe9, 0x6a, 0xe2, 0xaa, 0xbb, 0x3b, 0x03,
	0x22, 0x71, 0x06, 0x08, 0x30, 0xf6, 0xab, 0x77, 0xd9, 0x80, 0xd5, 0xd6, 0x6e, 0xba, 0x82, 0xdf,
	0x39, 0xe7, 0x92, 0x7b, 0xc0, 0x7f, 0xad, 0x33, 0xc1, 0xb0, 0xe0, 0x94, 0xe5, 0x10, 0xa0, 0x48,
	0x48, 0x06, 0xe9, 0x98, 0xfd, 0x97, 0xc6, 0xc8, 0x46, 0xb0, 0x44, 0x55, 0xb7, 0x67, 0x41, 0xb5,
	0xc2, 0x07, 0x68, 0xed, 0x39, 0x37, 0x7f, 0xeb, 0xe1, 0xf1, 0xce, 0x29, 0xbb, 0x81, 0x00, 0xe4,
	0x1f, 0x9e, 0xb4, 0x82, 0x43, 0xd3, 0x28, 0xa3, 0x29, 0xca, 0x50, 0x3e, 0x29, 0x3f, 0x05, 0x92,
	0xe1, 0xe9, 0x01, 0xea, 0xe3, 0xb3, 0xaa, 0x85, 0xf6, 0x82, 0xf6, 0x92, 0xff, 0x55, 0x22, 0x33,
	0x3c, 0x3e, 0x09, 0xcd, 0x8d, 0x7b, 0xda, 0xd0, 0x7e, 0xb2, 0xaf, 0x1c, 0x3d, 0x07, 0x41, 0xac,
	0x0d, 0x17, 0xf4, 0x57, 0x86, 0xf2, 0x41, 0x79, 0x65, 0x32, 0xc7, 0xbf, 0x7d, 0x30, 0x4e, 0x6c,
	0x5f, 0xf9, 0xb6, 0x01, 0x49, 0x07, 0x69, 0xf6, 0x46, 0x23, 0x4b, 0x3c, 0xb4, 0xaa, 0x3e, 0x76,
	0x96, 0x0e, 0x33, 0x94, 0x4f, 0x97, 0xb3, 0xe2, 0x5c, 0xad, 0xb8, 0x54, 0x2b, 0x76, 0x97, 0x6a,
	0xe5, 0x47, 0x92, 0x3c, 0xe0, 0x11, 0x77, 0xc6, 0x9a, 0xfd, 0x9e, 0x8e, 0x7e, 0x1c, 0xba, 0x44,
	0xc9, 0x1d, 0xfe, 0x63, 0xc1, 0x7b, 0xa1, 0xa5, 0x70, 0x6b, 0xd3, 0xe9, 0x40, 0xc7, 0x69, 0xdf,
	0x6f, 0x6a, 0x6c, 0x14, 0x3f, 0x3d, 0xbe, 0x40, 0x27, 0x19, 0xca, 0xfb, 0xe5, 0x95, 0x63, 0xa3,
	0x78, 0xdf, 0x28, 0x1f, 0x40, 0xd7, 0x82, 0xe2, 0x0c, 0xe5, 0xa8, 0xbc, 0xd1, 0x1e, 0x57, 0x2f,
	0xf7, 0x52, 0x85, 0x43, 0x57, 0x15, 0xb5, 0x69, 0x99, 0x34, 0x27, 0xa5, 0x39, 0x2c, 0x20, 0x04,
	0x68, 0x58, 0x0d, 0x95, 0x53, 0x5c, 0x2c, 0xc0, 0x2a, 0x66, 0x8f, 0x92, 0x45, 0xf0, 0xcc, 0x56,
	0xd5, 0x30, 0x6d, 0xbe, 0x7a, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x0f, 0x7a, 0xbc, 0xf6, 0x01,
	0x00, 0x00,
}
